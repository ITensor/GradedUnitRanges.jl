name: "IntegrationTest"

on:
  push:
    branches:
      - 'main'
    tags: '*'
  pull_request:

jobs:
  test:
    name: ITensor/MapBroadcast.jl
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: 1
          arch: x64
      - uses: julia-actions/julia-buildpkg@latest
        with:
          localregistry: "https://github.com/ITensor/ITensorRegistry.git"
      - name: Clone Downstream
        uses: actions/checkout@v4
        with:
          repository: ITensor/MapBroadcast.jl
          path: downstream
      - name: Load this and run the downstream tests
        shell: julia --color=yes --project=test {0}
        run: |
          using Pkg
          # If provided add local registries
          if !isempty("https://github.com/ITensor/ITensorRegistry.git")
            registry_urls = split("https://github.com/ITensor/ITensorRegistry.git", "\n") .|> string
            for registry_url in registry_urls
              isempty(registry_url) && continue
              Pkg.Registry.add(Pkg.RegistrySpec(; url=registry_url))
            end
          end
          try
            Pkg.develop(PackageSpec(path="../downstream"))
            Pkg.test("MapBroadcast")

            ## # force it to use this PR's version of the package
            ## Pkg.develop(PackageSpec(path="."))  # resolver may fail with main deps
            ## Pkg.update()
            ## Pkg.test(coverage=true)  # resolver may fail with test time deps
          catch err
            err isa Pkg.Resolve.ResolverError || rethrow()
            # If we can't resolve that means this is incompatible by SemVer and this is fine
            # It means we marked this as a breaking change, so we don't need to worry about
            # Mistakenly introducing a breaking change, as we have intentionally made one
            @info "Not compatible with this release. No problem." exception=err
            exit(0)  # Exit immediately, as a success
          end
